AWSTemplateFormatVersion: 2010-09-09
Parameters:
    ProjectName:
        Type: String
        Default: zillow-webscraper
        Description: Name for the project, used in the code repository.
    DeploymentBucket:
        Type: String
        Default: zillow-webscraper
        Description: Bucket where the files will be deployed.
    BuildArtifactsBucket:
        Type: String
        Default: zillow-webscraper-build-artifacts
        Description: S3 Bucket used for storing code artifacts.

Resources:
    # Code Commit Repo
    CodeRepository:
        Type: AWS::CodeCommit::Repository
        Properties:
            RepositoryName: !Sub "${ProjectName}"
            RepositoryDescription: !Sub "Repository for the ${ProjectName} project"

    CodeBuildServiceRole:
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Version: '2012-10-17'
                Statement:
                  - Action:
                      - 'sts:AssumeRole'
                    Effect: Allow
                    Principal:
                      Service:
                        - codebuild.amazonaws.com
            Path: /
            Policies:
                - PolicyName: CodeBuildAccess
                  PolicyDocument:
                    Version: '2012-10-17'
                    Statement:
                      - Effect: Allow
                        Resource:
                          - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${ProjectName}-build'
                          - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${ProjectName}-build:*'
                        Action:
                          - 'logs:CreateLogGroup'
                          - 'logs:CreateLogStream'
                          - 'logs:PutLogEvents'
                      - Effect: Allow
                        Resource:
                          - !Sub 'arn:aws:s3:::${BuildArtifactsBucket}/*'
                          - !Sub 'arn:aws:s3:::${DeploymentBucket}/*'
                        Action: 
                          - 's3:GetObject'
                          - 's3:GetObjectVersion'
                          - 's3:PutObject'

    CodeBuildProject:
      Type: AWS::CodeBuild::Project
      Properties:
          Name: !Sub "${ProjectName}-build"
          Description: Build project for the s3 static content deployment
          Artifacts:
              Location: !Ref BuildArtifactsBucket
              Type: S3
          Environment: 
              Type: LINUX_CONTAINER
              ComputeType: BUILD_GENERAL1_SMALL
              Image: aws/codebuild/nodejs:8.11.0
              EnvironmentVariables:
                - Name: BUILD_OUTPUT_BUCKET
                  Value: !Ref BuildArtifactsBucket
          ServiceRole: !GetAtt CodeBuildServiceRole.Arn
          Source:
            Auth:
              Type: OAUTH
            Location: https://github.com/Nickadiemus/zillow-webscraper
            Type: GITHUB
          Triggers:
              Webhook: true
          TimeoutInMinutes: 10
     
    # CloudFormation role 
    CloudFormationExecutionRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            Action: 
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - cloudformation.amazonaws.com
        Path: /
        Policies:
          - PolicyName: CloudFormationPolicy
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Action:
                    - cloudfront:*
                    - lambda:*
                    - cloudformation:*
                    - iam:*
                  Effect: Allow
                  Resource: '*'
                - Action: 
                    - 's3:GetObject'
                  Effect: Allow
                  Resource:
                    - !Sub 'arn:aws:s3:::${BuildArtifactsBucket}/*'


     # CodePipeline definition and role 
    
    PipelineExecutionRole:
        Type: AWS::IAM::Role
        Properties:
            AssumeRolePolicyDocument:
                Version: '2012-10-17'
                Statement:
                  - Action: 
                    - 'sts:AssumeRole'
                    Effect: Allow
                    Principal:
                      Service: 
                        - codepipeline.amazonaws.com
            Path: /
            Policies:
                - PolicyName: CodePipelineAccess
                  PolicyDocument:
                    Version: '2012-10-17'
                    Statement:
                        - Action:
                            - iam:PassRole
                            - codecommit:CancelUploadArchive
                            - codecommit:GetBranch
                            - codecommit:GetCommit
                            - codecommit:GetUploadArchiveStatus
                            - codecommit:UploadArchive
                            - cloudformation:*
                            - codebuild:BatchGetBuilds
                            - codebuild:StartBuild
                            - lambda:InvokeFunction
                            - lambda:ListFunctions
                          Effect: Allow
                          Resource: '*'
                        - Action: 
                            - 's3:*'
                          Effect: Allow
                          Resource:
                            - !Sub 'arn:aws:s3:::${BuildArtifactsBucket}/*'
                            - !Sub 'arn:aws:s3:::${DeploymentBucket}/*'
    
    PipelineDEV:
      Type: AWS::CodePipeline::Pipeline
      Properties:
          ArtifactStore: 
              Location: !Ref BuildArtifactsBucket
              Type: S3
          Name: !Sub ${ProjectName}-pipeline-dev
          RoleArn: !GetAtt PipelineExecutionRole.Arn
          Stages:
              - Name: Source
                Actions:
                  - Name: CodeCommitRepo
                    ActionTypeId:
                      Category: Source
                      Owner: AWS
                      Provider: CodeCommit
                      Version: 1
                    Configuration:
                      RepositoryName: !Sub '${ProjectName}'
                      BranchName: dev
                    OutputArtifacts:
                      - Name: SourceZipDev
                    RunOrder: 1
              - Name: Build
                Actions:
                  - Name: CodeBuild
                    ActionTypeId:
                      Category: Build
                      Owner: AWS
                      Provider: CodeBuild
                      Version: 1
                    Configuration:
                      ProjectName: !Ref CodeBuildProject
                    InputArtifacts:
                      - Name: SourceZipDev
                    OutputArtifacts:
                      - Name: BuiltZipDev
              - Name: Deploy-DEV
                Actions:
                  - Name: CreateChangeSet
                    ActionTypeId:
                      Category: Deploy
                      Owner: AWS
                      Provider: CloudFormation
                      Version: 1
                    Configuration:
                      ActionMode: CHANGE_SET_REPLACE
                      RoleArn: !GetAtt CloudFormationExecutionRole.Arn
                      StackName: !Sub '${ProjectName}-dev'
                      ChangeSetName: !Sub '${ProjectName}-ChangeSet-dev'
                      TemplatePath: BuiltZipDev::serverless.yml
                      Capabilities: CAPABILITY_IAM
                      ParameterOverrides: '{ "Environment": "dev" }'
                    InputArtifacts:
                      - Name: BuiltZipDev
                    RunOrder: 1
                  - Name: ExecuteChangeSet
                    ActionTypeId:
                      Category: Deploy
                      Owner: AWS
                      Provider: CloudFormation
                      Version: 1
                    Configuration:
                      ActionMode: CHANGE_SET_EXECUTE
                      RoleArn: !GetAtt CloudFormationExecutionRole.Arn
                      StackName: !Sub '${ProjectName}-dev'
                      ChangeSetName: !Sub '${ProjectName}-ChangeSet-dev'
                    OutputArtifacts:
                      - Name: !Sub '${ProjectName}DevChangeSet'
                    RunOrder: 2

Outputs:
  Git:
    Description: The URL to use for cloning the repository over HTTPS
    Value: !GetAtt CodeRepository.CloneUrlHttp